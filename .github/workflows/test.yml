# This GitHub action runs your tests for each commit push and/or PR. Optionally
# you can turn it on using a cron schedule for regular testing.
#
name: Tests
on:
  push:
    paths-ignore:
      - 'README.md'
  pull_request:
    types: [labeled]
    paths-ignore:
      - 'README.md'
  pull_request_target:
    types: [opened, synchronize, reopened, labeled]
    paths-ignore:
      - 'README.md'

  # For systems with an upstream API that could drift unexpectedly (like most SaaS systems, etc.),
  # we recommend testing at a regular interval not necessarily tied to code changes. This will 
  # ensure you are alerted to something breaking due to an API change, even if the code did not
  # change.
  # schedule:
  #   - cron: '0 13 * * *'
jobs:
  build:
    if: |
      github.event.pull_request.head.repo.full_name != github.repository &&
      contains(github.event.pull_request.labels.*.name, 'safe_to_test')
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.18'
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.sha }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get dependencies
        run: |
          go mod download

      - name: Build
        run: |
          go build -v .

  test:
    if: |
      github.event.pull_request.head.repo.full_name != github.repository &&
      contains(github.event.pull_request.labels.*.name, 'safe_to_test')
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 120
    strategy:
      max-parallel: 1  # This makes jobs run sequentially
      fail-fast: false
      matrix:
        terraform: [
          '0.15.5',
          '0.14.11',
          '1.1.2',
          '1.5.3'
        ]
    name: Test Terraform ${{ matrix.terraform }}
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.18'
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.sha }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get dependencies
        run: |
          go mod download

      - name: Check secrets availability
        run: |
          echo "AQUA_URL: ${{ secrets.AQUA_URL != '' && 'Present' || 'Missing' }}"
          echo "AQUA_USER: ${{ secrets.AQUA_USER != '' && 'Present' || 'Missing' }}"
          echo "AQUA_PASSWORD: ${{ secrets.AQUA_PASSWORD != '' && 'Present' || 'Missing' }}"

      - name: Log event keys
        uses: actions/github-script@v7
        with:
          script: |
            console.log(Object.keys(github.event))

      - name: Run TF acceptance tests
        uses: nick-fields/retry@v2
        env:
          TF_ACC: "1"
          TF_ACC_TERRAFORM_VERSION: ${{ matrix.terraform }}
          AQUA_URL: ${{ secrets.AQUA_URL }}
          AQUA_USER: ${{ secrets.AQUA_USER }}
          AQUA_PASSWORD: ${{ secrets.AQUA_PASSWORD }}
        with:
          max_attempts: 2
          timeout_minutes: 15
          command: go test -v -cover ./aquasec/ -timeout 15m